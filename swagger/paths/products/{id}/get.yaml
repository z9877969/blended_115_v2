tags:
  - Products
summary: Get products by id
operationId: getProducts
description: 'Get products by id'
security:
  - bearerAuth: []
parameters:
  - in: path
    name: id
    required: true
    schema:
      type: string
      example: '65ca67e7ae7f10c88b598384'
responses:
  '200':
    description: 'Get products by id'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Successfully found product with id 65ca67e7ae7f10c88b598384!
            data:
              type: object
              properties:
                _id:
                  type: string
                  example: '65ca67e7ae7f10c88b598384'
                name:
                  type: string
                  minLength: 1
                  maxLength: 24
                  example: Smartphone
                price:
                  type: number
                  minimum: 0
                  maximum: 2000000
                  example: 40000
                category:
                  type: string
                  enum:
                    - books
                    - electronics
                    - clothing
                    - other
                  example: electronics
                description:
                  type: string
                  example: Some product description
  '400':
    description: Bad request
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 400
            message:
              type: string
              example: Something went wrong
            data:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                  example: 'Invalid id'

  '404':
    description: Not found
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 404
            message:
              type: string
              example: NotFoundError
            data:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                  example: 'Not found'
